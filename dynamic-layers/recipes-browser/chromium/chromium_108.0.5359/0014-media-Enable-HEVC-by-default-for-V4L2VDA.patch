From b14ea99b1a962ade942c3fe2445fe9c472f1b765 Mon Sep 17 00:00:00 2001
From: amazingfate <liujianfeng1994@gmail.com>
Date: Wed, 11 Jan 2023 12:17:43 +0000
Subject: [PATCH 14/16] media: Enable HEVC by default for V4L2VDA

---
 media/gpu/v4l2/v4l2_device.cc                         | 9 +++++++++
 media/gpu/v4l2/v4l2_vda_helpers.cc                    | 1 +
 media/gpu/v4l2/v4l2_video_decode_accelerator.cc       | 2 +-
 media/gpu/v4l2/v4l2_video_decoder.cc                  | 3 ++-
 media/gpu/v4l2/v4l2_video_decoder_backend_stateful.cc | 1 +
 5 files changed, 14 insertions(+), 2 deletions(-)

diff --git a/media/gpu/v4l2/v4l2_device.cc b/media/gpu/v4l2/v4l2_device.cc
index 0bab32771..e1b597c40 100644
--- a/media/gpu/v4l2/v4l2_device.cc
+++ b/media/gpu/v4l2/v4l2_device.cc
@@ -1588,6 +1588,8 @@ uint32_t V4L2Device::VideoCodecProfileToV4L2PixFmt(VideoCodecProfile profile,
 
   if (profile >= H264PROFILE_MIN && profile <= H264PROFILE_MAX) {
     return V4L2_PIX_FMT_H264;
+  } else if (profile >= HEVCPROFILE_MIN && profile <= HEVCPROFILE_MAX) {
+    return V4L2_PIX_FMT_HEVC;
   } else if (profile >= VP8PROFILE_MIN && profile <= VP8PROFILE_MAX) {
     return V4L2_PIX_FMT_VP8;
   } else if (profile >= VP9PROFILE_MIN && profile <= VP9PROFILE_MAX) {
@@ -1751,6 +1753,13 @@ std::vector<VideoCodecProfile> V4L2Device::V4L2PixFmtToVideoCodecProfiles(
           H264PROFILE_HIGH,
       };
       break;
+    case V4L2_PIX_FMT_HEVC:
+      profiles = {
+          HEVCPROFILE_MAIN,
+          HEVCPROFILE_MAIN10,
+          HEVCPROFILE_MAIN_STILL_PICTURE,
+      };
+      break;
     case V4L2_PIX_FMT_VP8:
       profiles = {VP8PROFILE_ANY};
       break;
diff --git a/media/gpu/v4l2/v4l2_vda_helpers.cc b/media/gpu/v4l2/v4l2_vda_helpers.cc
index baaca9c0a..71983d372 100644
--- a/media/gpu/v4l2/v4l2_vda_helpers.cc
+++ b/media/gpu/v4l2/v4l2_vda_helpers.cc
@@ -149,6 +149,7 @@ InputBufferFragmentSplitter::CreateFromProfile(
     case VideoCodec::kH264:
       return std::make_unique<
           v4l2_vda_helpers::H264InputBufferFragmentSplitter>();
+    case VideoCodec::kHEVC:
     case VideoCodec::kVP8:
     case VideoCodec::kVP9:
       // VP8/VP9 don't need any frame splitting, use the default implementation.
diff --git a/media/gpu/v4l2/v4l2_video_decode_accelerator.cc b/media/gpu/v4l2/v4l2_video_decode_accelerator.cc
index 05b87395f..08da713c9 100644
--- a/media/gpu/v4l2/v4l2_video_decode_accelerator.cc
+++ b/media/gpu/v4l2/v4l2_video_decode_accelerator.cc
@@ -87,7 +87,7 @@ bool IsVp9KSVCStream(uint32_t input_format_fourcc,
 
 // static
 const uint32_t V4L2VideoDecodeAccelerator::supported_input_fourccs_[] = {
-    V4L2_PIX_FMT_H264, V4L2_PIX_FMT_VP8, V4L2_PIX_FMT_VP9,
+    V4L2_PIX_FMT_H264, V4L2_PIX_FMT_HEVC, V4L2_PIX_FMT_VP8, V4L2_PIX_FMT_VP9,
 };
 
 // static
diff --git a/media/gpu/v4l2/v4l2_video_decoder.cc b/media/gpu/v4l2/v4l2_video_decoder.cc
index a124f9f11..57f818a3e 100644
--- a/media/gpu/v4l2/v4l2_video_decoder.cc
+++ b/media/gpu/v4l2/v4l2_video_decoder.cc
@@ -55,7 +55,8 @@ constexpr uint32_t kSupportedInputFourccs[] = {
 #if !BUILDFLAG(USE_LINUX_V4L2)
     V4L2_PIX_FMT_H264_SLICE, V4L2_PIX_FMT_VP8_FRAME, V4L2_PIX_FMT_VP9_FRAME,
 #endif
-    V4L2_PIX_FMT_H264,       V4L2_PIX_FMT_VP8,       V4L2_PIX_FMT_VP9,
+    V4L2_PIX_FMT_H264,      V4L2_PIX_FMT_HEVC,
+    V4L2_PIX_FMT_VP8,       V4L2_PIX_FMT_VP9,
 };
 
 }  // namespace
diff --git a/media/gpu/v4l2/v4l2_video_decoder_backend_stateful.cc b/media/gpu/v4l2/v4l2_video_decoder_backend_stateful.cc
index b18d655dc..1b204f722 100644
--- a/media/gpu/v4l2/v4l2_video_decoder_backend_stateful.cc
+++ b/media/gpu/v4l2/v4l2_video_decoder_backend_stateful.cc
@@ -733,6 +733,7 @@ bool V4L2StatefulVideoDecoderBackend::IsSupportedProfile(
   if (supported_profiles_.empty()) {
     constexpr uint32_t kSupportedInputFourccs[] = {
         V4L2_PIX_FMT_H264,
+	V4L2_PIX_FMT_HEVC,
         V4L2_PIX_FMT_VP8,
         V4L2_PIX_FMT_VP9,
     };
-- 
2.14.3

